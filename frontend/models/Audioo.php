<?php

namespace frontend\models;

use simple_html_dom;
use Yii;

/**
 * This is the model class for table "audioo".
 *
 * @property int $id
 * @property string $namecode
 * @property string|null $tent
 * @property string|null $link
 *
 * @property Cook[] $cooks
 */
class Audioo extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public $infor;
    public static function tableName()
    {
        return 'audioo';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['namecode'], 'required'],
            [['link'], 'string'],
            [['namecode', 'tent'], 'string', 'max' => 255],
            [['namecode'], 'unique'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'namecode' => 'Link truyện',
            'tent' => 'Tên truyện',
            'link' => 'Link',
        ];
    }

    /**
     * Gets query for [[Cooks]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCooks()
    {
        return $this->hasMany(Cook::class, ['idtruyen' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        $timidu = Uvst::findOne(['iduser' => Yii::$app->user->identity->id]);
        $my_array1 = explode(",", $timidu->idtruyen);

        $my_array1[] = $this->id;
        $my_array1 = array_filter($my_array1);

        $timidu->idtruyen = implode(',', array_unique($my_array1));
        $timidu->save();

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
    public function save($runValidation = true, $attributeNames = null)
    {

        $str = $this->infor['link'];
        $pos = strpos($str, "audiotruyenfull.com");
        if ($pos) {
            include "recs/simple_html_dom.php";
            $load = $this->loadhtml($str);
            $html = new simple_html_dom();
            $html->load($load);
            $namevier = $html->find('h1[class=entry-title]', 0)->innertext;
            if ($namevier == null){
                return false;
            }
            $str = $html->find('div[class=tad-field-content-audio]',0);
            $str = $str->find('b',0)->id;
        }else{
            return false;
        }

            $ps= strpos($str, '/0');
            $str = substr(($str), 0, $ps+4);



        $ch = curl_init($str);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.46');
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        $res = curl_exec($ch);
        $redirectURL = curl_getinfo($ch,CURLINFO_EFFECTIVE_URL );
        curl_close($ch);

        $ps= strpos($redirectURL, '/0');

        $redirectURL = substr(($redirectURL), 0, $ps);
        $res = $this->loadhtml($redirectURL);


        $html->load($res);
        $check = $html->find('a',0);
        if ( $check == null){
            return false;
        }
        $strcc = [];
        foreach($html->find('a') as $a)
        {
            if(strpos($a->href, 'mp3')){
                $strcc[] = $redirectURL . '/' . $a->href;
            }

        }
        $fullname = implode('<br>', $strcc);
        $fullname = str_replace( 'http:', 'https:', $fullname );

        $this->tent = $namevier;

        if ($this->isNewRecord){
            $this->namecode = $this->infor['text_02'];
            $this->link =$fullname;
        }else{
            $this->link =$fullname;
        }
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }


    public function loadhtml($str)
    {
        $ch = curl_init($str);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.46');
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        $res = curl_exec($ch);
        curl_close($ch);

        return $res;

    }
}
